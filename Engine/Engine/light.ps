/////////////
// GLOBALS //
/////////////
Texture2D shaderTextures[2];
SamplerState SampleType;

cbuffer LightBuffer
{
    float4 diffuseColor;
    float3 lightDirection;
	float padding;
};


struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
	float3 normal : NORMAL;
};


float4 LightPixelShader(PixelInputType input) : SV_TARGET
{
	float4 textureColor;
	float3 lightDir;
	float lightIntensity;
	float4 color1;
	float4 color2;
    float4 blendColor;

	// Pobierz kolor pixela z pierwszej tekstury.
    color1 = shaderTextures[0].Sample(SampleType, input.tex);

    // Pobierz kolor pixela z drugiej tekstury
    color2 = shaderTextures[1].Sample(SampleType, input.tex);

    // Zmiksuj dwa piksele razem i pomno¿¹c przez wartoœæ gamma.
    blendColor = color1 * color2 * 2.0;
    
    // Nasyæ kolor koñcowy.
    blendColor = saturate(blendColor);

    return blendColor;
}
